{"version":3,"sources":["firebase.js","Auth.js","components/instabuylogo.png","components/header.js","firebaseFunctions.js","components/panels/addPanel.js","helperFunctions.js","components/panels/dataTablePanel.js","components/dashboard.js","components/PrivateRoute.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","Header","props","useContext","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","display","src","logo","className","alt","fontSize","Button","primary","hoverIndicator","focusIndicator","label","onClick","signOut","collectionName","ordersRef","firestore","collection","firebaseFunctions","setTrackingData","data","callback","a","doc","invoice","set","console","log","getAllTrackingData","orderBy","get","snapshot","response","docs","map","error","searchTrackingData","searchTerm","db","where","trim","toUpperCase","AddPanel","entryType","setEntryType","setValue","loading","setLoading","entryFormRef","useRef","editData","Object","keys","length","animation","type","delay","size","duration","bottom","secondary","color","icon","AddCircle","reverse","current","reset","setEditData","Heading","level","marginTop","Form","ref","onChange","nextValue","onReset","onSubmit","values","key","undefined","validateValues","setLoadFirebaseData","loadFirebaseData","submitEntry","defaultValue","name","FormField","htmlFor","required","TextInput","id","disabled","DateInput","format","ordered_date","ready_date","shipped_date","received_date","Spinner","Text","margin","gap","months","days","helper","formatDate","date","newDate","Date","year","getFullYear","dateIndex","getDate","month","getMonth","day","getDay","DataTablePanel","searchObject","setSearchObject","trackingData","isLoadingData","setIsLoadingData","responseData","fetchData","getSearchedData","getFinalState","colors","finalStatus","i","status","split","toLocaleString","fill","placeholder","Search","Table","TableHeader","TableRow","TableCell","scope","border","horizontal","TableBody","tracked","index","textTransform","height","width","borderRadius","plain","FormEdit","colSpan","Dashboard","Grid","rows","columns","areas","start","end","gridArea","top","PrivateRoute","RouteComponent","component","rest","render","routeProps","to","withRouter","history","message","alertError","setAlertError","credentials","setCredentials","handleLogin","useCallback","email","password","signInWithEmailAndPassword","push","Card","CardBody","toString","App","Grommet","theme","global","font","family","exact","path","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98e1ed0d.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDivYY9wtPwpIP6pdGXTtOZemkRqrlA5uk\",\r\n    authDomain: \"order-tracking-faa26.firebaseapp.com\",\r\n    databaseURL: \"https://order-tracking-faa26-default-rtdb.firebaseio.com\",\r\n    projectId: \"order-tracking-faa26\",\r\n    storageBucket: \"order-tracking-faa26.appspot.com\",\r\n    messagingSenderId: \"875480724842\",\r\n    appId: \"1:875480724842:web:4b2c5b979f4424acf3a113\",\r\n    measurementId: \"G-81RRJR905P\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./firebase.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n    });\r\n  }, []);\r\n\r\n  if(pending){\r\n    return <>Loading...</>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/instabuylogo.7f11e31c.png\";","import React from 'react'\r\nimport { Box, Button } from 'grommet';\r\nimport firebase from '../firebase'\r\nimport { AuthContext } from \"../Auth.js\";\r\n\r\n// CSS Import\r\nimport './header.css'\r\n\r\nimport logo from './instabuylogo.png';\r\n\r\nconst Header = (props) => {\r\n    const { currentUser } = React.useContext(AuthContext);\r\n    return(\r\n        <Box\r\n            tag= 'header'\r\n            direction= 'row'\r\n            align= 'center'\r\n            justify= 'between'\r\n            background= 'white'\r\n            pad= {{ left: 'medium', right: 'small', vertical: 'small' }}\r\n            elevation= 'xsmall'\r\n            style= {{ zIndex: '1' }}\r\n            {...props}\r\n        >\r\n            <div style={{ display: 'flex' }}>\r\n                <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n                <p style={{fontSize: \"18px\"}}><span className=\"app-title\">InstaDelivery</span> Admin Console</p>\r\n            </div>\r\n            {currentUser &&\r\n                <Button \r\n                primary \r\n                hoverIndicator='accent-1' \r\n                focusIndicator={false} \r\n                label=\"logout\" \r\n                className=\"button-style\"\r\n                onClick={()=>{firebase.auth().signOut()}}\r\n                />\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header;","import firebase from'./firebase.js'\r\n\r\nconst collectionName = \"orders\"\r\n\r\nconst db = firebase.firestore();\r\nconst ordersRef = db.collection(collectionName)\r\n\r\n// Add new Data\r\nconst firebaseFunctions = { \r\n    setTrackingData : async(data, callback) => {\r\n        try {\r\n            const firebaseResponse = await ordersRef.doc(data.invoice).set(data);\r\n            callback(null)\r\n        } catch (error) {\r\n            console.log(error);\r\n            callback(error)\r\n        }\r\n    },\r\n    getAllTrackingData : async() => {\r\n        try {\r\n            const snapshot = await ordersRef.orderBy('invoice','desc').get();\r\n            let response = snapshot.docs.map(doc => doc.data())\r\n            return {error: false, response: response};\r\n        } catch(error){\r\n            console.log(error);\r\n            return {error: true};\r\n        }\r\n    },\r\n    searchTrackingData : async(searchTerm) => {\r\n        const db = firebase.firestore();\r\n        try{\r\n            const snapshot = await db.collection(collectionName).where('invoice', '==', (searchTerm.trim()).toUpperCase()).get();\r\n            let response = snapshot.docs.map(doc => doc.data())\r\n            return {error: false, response: response};\r\n        } catch(error){\r\n            console.log(error);\r\n            return {error: true};\r\n        }\r\n    }\r\n}\r\n\r\nexport default firebaseFunctions;","import React from 'react';\r\nimport { Box, Heading, Form, FormField, TextInput, Button, DateInput, Spinner, Text } from 'grommet';\r\nimport { AddCircle } from 'grommet-icons';\r\n\r\n// Firebase\r\nimport firebaseFunctions from \"../../firebaseFunctions.js\";\r\n\r\n\r\nconst AddPanel = (props) => {\r\n    const [entryType, setEntryType] = React.useState(0)\r\n    const [value, setValue] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n    const entryFormRef = React.useRef(null);\r\n\r\n    // React.useEffect(() => {\r\n    //     setorderedDate((new Date()).toISOString())\r\n    // }, [])\r\n\r\n    // functions\r\n    const addNewEntry = () => {\r\n        setValue({})\r\n        setEntryType(0)\r\n        entryFormRef.current.reset();\r\n        if(props.setEditData){\r\n            props.setEditData({});\r\n        }\r\n    }\r\n\r\n    const changeToEditData = (data) => {\r\n        setValue(data);\r\n        setEntryType(1);\r\n    }\r\n\r\n    const validateValues = (values) => {\r\n        for (let key in values){\r\n            if(values[key] === undefined || !values[key]){\r\n                delete values[key]\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    const submitEntry = (value) => {\r\n        value.invoice = value.invoice.toUpperCase();\r\n        value = validateValues(value);\r\n        setLoading(true);\r\n        firebaseFunctions.setTrackingData(value, function(error){\r\n            if(error){\r\n                console.log(\"Error occured\");\r\n            } else {\r\n                setValue({});\r\n                setEntryType(0);\r\n                entryFormRef.current.reset();\r\n\r\n                if(props.setLoadFirebaseData){\r\n                    props.setLoadFirebaseData(!props.loadFirebaseData);\r\n                }\r\n            }\r\n\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(props.editData && Object.keys(props.editData).length !== 0){\r\n            console.log(\"why\", props.editData)\r\n            changeToEditData(props.editData);\r\n        }\r\n    }, [props.editData])\r\n\r\n    return(\r\n        <>\r\n            {entryType !== 0 &&\r\n                <Box\r\n                    animation={{type:\"slideDown\", delay:0, size:\"large\", duration:500}}\r\n                    justify=\"center\"\r\n                    align=\"start\"\r\n                    pad={{bottom:\"medium\"}}\r\n                >\r\n                    <Button \r\n                        secondary \r\n                        style={{color: \"#1D337C\"}}\r\n                        icon={<AddCircle color=\"brand\"/>} \r\n                        label=\"Add New Entry\" \r\n                        reverse \r\n                        onClick={addNewEntry}\r\n                        focusIndicator={false}\r\n                    />\r\n                </Box>\r\n            }\r\n            {entryType === 0 ?\r\n                <Heading level=\"4\" style={{marginTop: 0}}>Add New Entry</Heading>\r\n                :\r\n                <Heading level=\"4\">Edit Existing Entry : <span style={{color: \"#a1a1a1\"}}>{props.editData ? props.editData.invoice : ''}</span></Heading>\r\n            }\r\n            <Form\r\n                ref={entryFormRef}\r\n                value={value}\r\n                onChange={nextValue => setValue(nextValue)}\r\n                onReset={() => {if(entryType===1){setValue({invoice: value.invoice})}else{setValue({})}}}\r\n                onSubmit={({ value }) => { submitEntry(value) }}\r\n                defaultValue={{invoice:\"\", name:\"\"}}\r\n            >\r\n                <FormField name=\"invoice\" htmlFor=\"invoice-id\" label=\"Invoice Number\" required>\r\n                    <TextInput id=\"invoice-id\" name=\"invoice\" disabled={entryType===1}/>\r\n                </FormField>\r\n                <FormField name=\"name\" htmlFor=\"text-input-id\" label=\"Name\" required>\r\n                    <TextInput id=\"name-id\" name=\"name\" />\r\n                </FormField>\r\n                <FormField name=\"ordered_date\" htmlFor=\"ordered_date-id\" label=\"Ordered Date\" required>\r\n                    <DateInput\r\n                        id=\"ordered_date-id\"\r\n                        name=\"ordered_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                    />\r\n                </FormField>\r\n                {value.ordered_date &&\r\n                 <FormField name=\"ready_date\" htmlFor=\"ready_date-id\" label=\"Ready Date\">\r\n                    <DateInput\r\n                        id=\"ready_date-id\"\r\n                        name=\"ready_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                    />\r\n                </FormField>\r\n                }\r\n                {value.ready_date &&\r\n                <FormField name=\"shipped_date\" htmlFor=\"shipped_date-id\" label=\"Shipped Date\">\r\n                    <DateInput\r\n                        id=\"shipped_date-id\"\r\n                        name=\"shipped_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                    />\r\n                </FormField>\r\n                }\r\n                {value.shipped_date &&\r\n                <FormField name=\"received_date\" htmlFor=\"received_date-id\" label=\"Received Date\">\r\n                    <DateInput\r\n                        id=\"received_date-id\"\r\n                        name=\"received_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                    />\r\n                </FormField>\r\n                }\r\n                {value.received_date &&\r\n                <FormField name=\"delivered_date\" htmlFor=\"delivered_date-id\" label=\"Delivered Date\">\r\n                    <DateInput\r\n                        id=\"delivered_date-id\"\r\n                        name=\"delivered_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                    />\r\n                </FormField>\r\n                }\r\n                {!loading?\r\n                    <Box direction=\"row\" gap=\"medium\" margin={{\"vertical\":\"medium\"}}>\r\n                        <Button type=\"submit\" primary label=\"Submit\" className=\"button-style\"/>\r\n                        <Button type=\"reset\" label=\"Reset\" style={{color: \"#1D337C\"}} className=\"button-style\"/>\r\n                    </Box>  \r\n                    : \r\n                    <div style={{ display: 'flex', marginTop: \"20px\"}}>\r\n                        <Spinner/>\r\n                        <Text margin={{\"horizontal\": \"medium\"}}>Saving Data...</Text>\r\n                    </div>\r\n                }\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPanel;","const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n];\r\n\r\nconst days = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tue',\r\n    'Wed',\r\n    'Thu',\r\n    'Fri',\r\n    'Sat'\r\n];\r\n\r\nconst helper = {\r\n    formatDate : (date) => {\r\n        let newDate = new Date(date);\r\n        const year = newDate.getFullYear();\r\n        const dateIndex = newDate.getDate();\r\n        const month = months[newDate.getMonth()];\r\n        const day = days[newDate.getDay()];\r\n\r\n        const formattedDate = `${day}, ${dateIndex} ${month} ${year}`\r\n        return formattedDate;\r\n\r\n    }\r\n}\r\n\r\nexport default helper;","import React from 'react'\r\nimport { Box, Button, TextInput, Table, TableHeader, TableRow, TableCell, TableBody, Text, Form, FormField, Spinner } from 'grommet';\r\nimport { Search, FormEdit, CircleAlert } from 'grommet-icons';\r\n\r\n// custom exported functions\r\nimport firebaseFunctions from \"../../firebaseFunctions.js\";\r\nimport helper from \"../../helperFunctions.js\"\r\n\r\nconst DataTablePanel = (props) => {\r\n\r\n    const [searchObject, setSearchObject] = React.useState([]);\r\n    const [trackingData, setTrackingData] = React.useState([]);\r\n    const [isLoadingData, setIsLoadingData] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        console.log(props)\r\n        const fetchData = async () => {\r\n            setIsLoadingData(true);\r\n            const responseData = await firebaseFunctions.getAllTrackingData();\r\n            if(responseData.error){\r\n                console.log(responseData.error);\r\n            } else {\r\n                setTrackingData(responseData.response);\r\n                console.log(responseData.response)\r\n            }\r\n            setIsLoadingData(false);\r\n        }\r\n        \r\n        fetchData();\r\n\r\n    },[props.loadFirebaseData])\r\n\r\n    const getSearchedData = async(searchTerm) => {\r\n        setIsLoadingData(true);\r\n        if(!searchTerm){\r\n            const responseData = await firebaseFunctions.getAllTrackingData();\r\n            if(responseData.error){\r\n                console.log(responseData.error);\r\n            } else {\r\n                setTrackingData(responseData.response);\r\n                console.log(responseData.response)\r\n            }\r\n        } else {\r\n            const responseData = await firebaseFunctions.searchTrackingData(searchTerm);\r\n            if(responseData.error){\r\n                console.log(responseData.error);\r\n            } else {\r\n                setTrackingData(responseData.response);\r\n                console.log(responseData.response)\r\n            }\r\n        }\r\n        setIsLoadingData(false);\r\n    }\r\n\r\n    const editSelectedData = (data) => {\r\n        if(props.setEditData){\r\n            props.setEditData(data);\r\n        }\r\n    }\r\n\r\n    const getFinalState = (data) => {\r\n        \r\n        let keys = [\"delivered_date\",\"received_date\",\"shipped_date\",\"ready_date\",\"ordered_date\"];\r\n        let colors = [\"#00873D\", \"#00C781\", \"#FFCA58\", \"#fa9200\", \"#FF4040\"]\r\n        let finalStatus = {};\r\n\r\n        for(let i=0; i < keys.length; i++){\r\n            if(keys[i] in data){\r\n                finalStatus = {\r\n                    status : (keys[i].split('_')[0]),\r\n                    date : data[keys[i]].toLocaleString(),\r\n                    color : colors[i]\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!finalStatus){\r\n            finalStatus = {\r\n                status : \"Invalid Status\",\r\n                date : \"-\"\r\n            }\r\n        }\r\n\r\n        return finalStatus;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Box fill>\r\n                <Box\r\n                    direction=\"row\"\r\n                    justify=\"between\"\r\n                >\r\n                    <Form\r\n                        value={searchObject}\r\n                        onChange={nextValue => setSearchObject(nextValue)}\r\n                        onSubmit={({ value }) => { getSearchedData(value.searchTerm) }}\r\n                    >\r\n                        <Box direction=\"row\">\r\n                            <FormField>\r\n                                <TextInput\r\n                                    placeholder=\"Search by invoice here\"\r\n                                    name=\"searchTerm\"\r\n                                    icon={<Search/>}\r\n                                />\r\n                            </FormField>\r\n                            <Button primary type=\"submit\" margin={{\"horizontal\": \"small\", vertical:\"xsmall\"}} label=\"Search\" className=\"button-style\"/>\r\n                        </Box>\r\n\r\n                    </Form>\r\n\r\n                    {isLoadingData && <Spinner size=\"medium\" align=\"end\"/>}\r\n\r\n                </Box>\r\n                <Box margin={{\"vertical\": \"large\"}}>\r\n                <Table>\r\n                    <TableHeader>\r\n                        <TableRow style={{background: '#f5f5f5'}}>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"medium\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                <strong>Invoice Number</strong>\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"large\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                Name\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"medium\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                Current Status\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"xlarge\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                Status Date\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"small\" pad={{vertical:\"small\", horizontal: \"small\"}} align=\"center\">\r\n                                Action\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {trackingData.length ? trackingData.map((tracked, index) => {\r\n                                return(\r\n                                    <TableRow key={tracked.invoice}>\r\n                                        <TableCell \r\n                                            scope=\"row\" \r\n                                            size=\"medium\"  \r\n                                            border=\"bottom\" \r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            <strong>{tracked.invoice}</strong>\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"large\"  \r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            {tracked.name}\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"medium\" \r\n                                            style={{textTransform: \"capitalize\"}}\r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            <div style={{ display: 'flex'}}>\r\n                                                <div \r\n                                                    style={{background: getFinalState(tracked).color, height: '20px', width: '20px', borderRadius: '50%', margin: '-2px 10px 0px 0px'}}>\r\n                                                </div>\r\n                                                {getFinalState(tracked).status}\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"xlarge\" \r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            {helper.formatDate(getFinalState(tracked).date)}\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"small\" \r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            <Box plain>\r\n                                                <Button \r\n                                                    plain \r\n                                                    hoverIndicator \r\n                                                    icon={<FormEdit/>} \r\n                                                    label=\"Edit\"\r\n                                                    onClick={() => editSelectedData(tracked)}/>\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                        })\r\n                            : <TableRow>\r\n                                <TableCell colSpan=\"5\" align=\"center\" pad={{vertical:\"medium\", horizontal: \"small\"}}><Text>😟 No Entries Found</Text></TableCell>\r\n                            </TableRow>\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataTablePanel;\r\n","import React from 'react';\r\nimport { Box, Grid } from 'grommet';\r\n\r\n// Import custom components\r\nimport AddPanel from './panels/addPanel'\r\nimport DataTablePanel from \"./panels/dataTablePanel\"\r\n\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const [editData, setEditData] = React.useState({});\r\n    const [loadFirebaseData, setLoadFirebaseData] = React.useState(true)\r\n\r\n    return(\r\n        <Grid\r\n          rows={['large']}\r\n          columns={['medium', 'auto']}\r\n          gap=\"xsmall\"\r\n          areas={[\r\n            { name: 'add-panel', start: [0, 0], end: [0, 0] },\r\n            { name: 'data-panel', start: [1, 0], end: [1, 0] },\r\n          ]}\r\n        >\r\n          <Box size=\"vertical\" animation={{type:\"slideUp\", delay:0, size:\"large\", duration:500}} pad={{vertical: \"large\", horizontal: \"medium\"}} gridArea=\"add-panel\" background=\"white\">\r\n            <AddPanel editData={editData} setEditData={setEditData} loadFirebaseData={loadFirebaseData} setLoadFirebaseData={setLoadFirebaseData}/>\r\n          </Box>\r\n          <Box animation={{type:\"slideUp\", delay:0, size:\"large\", duration:500}} pad={{top:\"large\", bottom:\"xlarge\", horizontal: \"medium\"}} gridArea=\"data-panel\" background=\"white\">\r\n            <DataTablePanel setEditData={setEditData} loadFirebaseData={loadFirebaseData}/>\r\n          </Box>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute;","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport firebase from \"../firebase\";\r\nimport { AuthContext } from \"../Auth.js\";\r\nimport { Box, Card, CardBody, Heading, Text, Form, FormField, TextInput, Button  } from \"grommet\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n  const [alertError, setAlertError] = useState({error: false, message: \"\"});\r\n  const [credentials, setCredentials] = React.useState({});\r\n\r\n  const handleLogin = useCallback(\r\n    async (credentials) => {\r\n      // event.preventDefault();\r\n      // const { email, password } = event.target.elements;\r\n      const email = credentials.email;\r\n      const password = credentials.password;\r\n\r\n      console.log(credentials)\r\n      console.log(password)\r\n      try {\r\n        await firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(email, password);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        console.log(error);\r\n        setAlertError({\r\n          error: true,\r\n          message: error\r\n        })\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Box background=\"white\" fill align=\"center\" justify=\"center\" pad=\"xlarge\">\r\n      <Heading level=\"2\">Login</Heading>\r\n      {alertError.error &&\r\n      <Box direction=\"row\" align=\"center\" justify=\"center\" fill=\"horizontal\" pad=\"medium\">\r\n        <Card  height=\"xsmall\" width=\"large\" background=\"#f8d7da\" elevation=\"xsmall\">\r\n            <CardBody pad=\"medium\" align=\"center\" justify=\"center\"><Text color=\"#842029\">{alertError.message.toString()}</Text></CardBody>\r\n        </Card>\r\n      </Box>\r\n      }\r\n      <Box width=\"medium\">\r\n        <Form \r\n          value={credentials}\r\n          onSubmit={({ value }) => { handleLogin(value) }}\r\n          onChange={nextValue => setCredentials(nextValue)}\r\n          defaultValue={{email: \"\", password: \"\"}}\r\n          >\r\n          <FormField name=\"email\" htmlFor=\"email-id\" label=\"Email\" required>\r\n            <TextInput id=\"email-id\" name=\"email\" type=\"email\"/>\r\n          </FormField>\r\n          <FormField name=\"password\" htmlFor=\"password-id\" label=\"Password\" required>\r\n            <TextInput id=\"password-id\" name=\"password\" type=\"password\"/>\r\n          </FormField>\r\n          <Box fill=\"horizontal\"  margin={{top: \"medium\"}} height=\"medium\">\r\n            <Button type=\"submit\" size=\"large\" primary label=\"Submit\" className=\"button-style\"/>\r\n          </Box>\r\n        </Form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);","import React from 'react';\nimport { Box, Grommet } from 'grommet';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport \"./app.css\"\n\n\n// import custom components\nimport Header from './components/header';\nimport Dashboard from './components/dashboard';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './components/Login'\nimport {AuthProvider} from './Auth';\n\nfunction App() {\n\n  const theme = {\n    global: {\n      colors: {\n        'brand': '#1D337C',\n        'accent-1': '#06164a',\n        'focus': '#06164a'\n      },\n      font: {\n        family: 'Poppins',\n        size: '16px',\n        height: '18px',\n      },\n    },\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <AuthProvider>\n        <Box fill background=\"light-2\">\n          <Header/>\n          <Router>\n            <PrivateRoute exact path=\"/\" component={Dashboard}/>\n            <Route exact path=\"/login\" component={Login} />\n          </Router>\n        </Box>\n      </AuthProvider>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}