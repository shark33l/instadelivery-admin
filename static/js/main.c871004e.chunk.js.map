{"version":3,"sources":["Auth.js","components/instabuylogo.png","components/header.js","databaseFunctions.js","components/panels/addPanel.js","helperFunctions.js","components/panels/dataTablePanel.js","components/dashboard.js","components/PrivateRoute.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","accessToken","localStorage","getItem","Provider","value","Header","props","useContext","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","display","src","logo","className","alt","fontSize","Button","primary","hoverIndicator","focusIndicator","label","onClick","removeItem","uri","databaseFunctions","loginUser","data","callback","a","fetch","method","body","JSON","stringify","then","res","json","result","jwt","error","response","message","console","log","setTrackingData","token","key","dataBody","invoice","name","ordered_date","processing_date","ontheway_date","pickup_date","delivered_date","undefined","headers","getAllTrackingData","searchTrackingData","searchTerm","endpoint","AddPanel","entryType","setEntryType","setValue","loading","setLoading","entryFormRef","useRef","editData","Object","keys","length","animation","type","delay","size","duration","bottom","secondary","color","icon","AddCircle","reverse","current","reset","setEditData","Heading","level","marginTop","Form","ref","onChange","nextValue","onReset","onSubmit","toUpperCase","values","validateValues","setLoadFirebaseData","loadFirebaseData","submitEntry","defaultValue","FormField","htmlFor","Text","required","TextInput","id","disabled","DateInput","format","calendarProps","bounds","Date","setFullYear","getFullYear","Spinner","margin","gap","months","days","helper","formatDate","date","newDate","year","dateIndex","getDate","month","getMonth","day","getDay","DataTablePanel","searchObject","setSearchObject","setSearchTerm","trackingData","page","startIndex","endIndex","step","paginationData","setPaginationData","isLoadingData","setIsLoadingData","responseData","fetchData","getFilteredData","filter","filterData","entries","toLowerCase","includes","finalState","getFinalState","status","getSearchedData","filteredData","keyNames","colors","finalStatus","i","toLocaleString","fill","placeholder","Search","Table","TableHeader","TableRow","TableCell","scope","border","horizontal","TableBody","map","tracked","index","textTransform","height","width","borderRadius","plain","FormEdit","colSpan","top","Pagination","alignSelf","numberItems","Dashboard","breakpoints","rows","columns","areas","add_panel","start","end","data_panel","ResponsiveContext","Consumer","Grid","gridArea","PrivateRoute","RouteComponent","component","rest","render","routeProps","to","withRouter","history","alertError","setAlertError","credentials","setCredentials","handleLogin","useCallback","email","password","username","setItem","push","Card","CardBody","toString","App","Grommet","theme","global","font","family","exact","path","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c871004e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // firebase.auth().onAuthStateChanged((user) => {\r\n    //   setCurrentUser(user)\r\n    //   setPending(false)\r\n    // });\r\n\r\n    let accessToken = localStorage.getItem(\"accessToken\");\r\n    if(currentUser !== accessToken){\r\n      setCurrentUser(accessToken);\r\n    }\r\n\r\n    setPending(false);\r\n\r\n  }, [currentUser]);\r\n\r\n  if(pending){\r\n    return <>Loading...</>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        setCurrentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/instabuylogo.7f11e31c.png\";","import React from 'react'\r\nimport { Box, Button } from 'grommet';\r\nimport { AuthContext } from \"../Auth.js\";\r\n\r\n// CSS Import\r\nimport './header.css'\r\n\r\nimport logo from './instabuylogo.png';\r\n\r\nconst Header = (props) => {\r\n    const { currentUser, setCurrentUser } = React.useContext(AuthContext);\r\n    return(\r\n        <Box\r\n            tag= 'header'\r\n            direction= 'row'\r\n            align= 'center'\r\n            justify= 'between'\r\n            background= 'white'\r\n            pad= {{ left: 'medium', right: 'small', vertical: 'small' }}\r\n            elevation= 'xsmall'\r\n            style= {{ zIndex: '1' }}\r\n            {...props}\r\n        >\r\n            <div style={{ display: 'flex' }}>\r\n                <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n                <p style={{fontSize: \"18px\"}}><span className=\"app-title\">InstaBuy</span> Admin Console</p>\r\n            </div>\r\n            {currentUser &&\r\n                <Button \r\n                primary \r\n                hoverIndicator='accent-1' \r\n                focusIndicator={false} \r\n                label=\"logout\" \r\n                className=\"button-style\"\r\n                onClick={()=>{\r\n                    localStorage.removeItem(\"accessToken\");\r\n                    setCurrentUser(null);\r\n                }}\r\n                />\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header;","const uri = \"https://instabuy.lk/track/api/endpoints/\";\r\n\r\n// Add new Data\r\nconst databaseFunctions = { \r\n    loginUser : async(data, callback) => {\r\n        const endpoint = uri + \"login.php\";\r\n\r\n        try {\r\n            const response = await fetch(endpoint, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then( res => res.json())\r\n                .then( (result) => {\r\n                    if(result.jwt){\r\n                        return {error: false, response: result};\r\n                    } else {\r\n                        return {error: result.message, response: null};\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.error(error);\r\n                    return {error: error, response: null};\r\n                })\r\n                console.log(response)\r\n                callback(response.error, response.response);\r\n        } catch(error){\r\n            console.error(error);\r\n            callback(error, null);\r\n        }\r\n    },\r\n    setTrackingData : async(data, token, callback) => {\r\n        let dataBody = {\r\n            invoice: null,\r\n            name: null,\r\n            ordered_date: null,\r\n            processing_date: null,\r\n            ontheway_date: null,\r\n            pickup_date: null,\r\n            delivered_date: null,\r\n\r\n        }\r\n        console.log(data)\r\n\r\n        for (let key in dataBody){\r\n            if(data[key] !== undefined && data[key]){\r\n                dataBody[key] = data[key]\r\n            }\r\n        }\r\n        \r\n        const endpoint = uri + \"upsert.php\";\r\n\r\n        try {\r\n            const response = await fetch(endpoint,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        \"Authorization\" : \"Bearer \" + token\r\n                    },\r\n                    body: JSON.stringify(dataBody)\r\n                })\r\n                .then( res => res.json())\r\n                .then((result) => {\r\n                    console.log(result);\r\n                    callback(null);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    callback(error)\r\n                })\r\n\r\n            return response;\r\n        } catch(error){\r\n            console.error(error);\r\n            callback(error);\r\n        }\r\n    },\r\n    getAllTrackingData : async() => {\r\n        const endpoint = uri + \"read.php\";\r\n\r\n        try {\r\n            const response = await fetch(endpoint,\r\n                {\r\n                    method: 'GET',\r\n                })\r\n                .then( res => res.json())\r\n                .then((result) => {\r\n                    console.log(result)\r\n                    return {error: false, response: result};\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    return {error: error}\r\n                })\r\n\r\n            return response;\r\n        } catch(error){\r\n            console.error(error);\r\n            return {error: error};\r\n        }\r\n    },\r\n    searchTrackingData : async(searchTerm) => {\r\n        const endpoint = uri + \"read.php?s=\" + searchTerm;\r\n        try {\r\n            const response = await fetch(endpoint,\r\n                {\r\n                    method: 'GET'\r\n                })\r\n                .then( res => res.json())\r\n                .then((result) => {\r\n                    console.log(result)\r\n                    return {error: false, response: result};\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    return {error: error}\r\n                })\r\n\r\n            return response;\r\n        } catch(error){\r\n            console.error(error);\r\n            return {error: error};\r\n        }\r\n    }\r\n}\r\n\r\nexport default databaseFunctions;","import React from 'react';\r\nimport { Box, Heading, Form, FormField, TextInput, Button, DateInput, Spinner, Text } from 'grommet';\r\nimport { AddCircle } from 'grommet-icons';\r\n\r\n// Firebase\r\nimport databaseFunctions from \"../../databaseFunctions.js\";\r\nimport { AuthContext } from \"../../Auth.js\";\r\n\r\n\r\n\r\nconst AddPanel = (props) => {\r\n\r\n    // Context from consumer\r\n    const { currentUser } = React.useContext(AuthContext);\r\n\r\n    const [entryType, setEntryType] = React.useState(0)\r\n    const [value, setValue] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n    const entryFormRef = React.useRef(null);\r\n\r\n    // React.useEffect(() => {\r\n    //     setorderedDate((new Date()).toISOString())\r\n    // }, [])\r\n\r\n    // functions\r\n    const addNewEntry = () => {\r\n        setValue({})\r\n        setEntryType(0)\r\n        entryFormRef.current.reset();\r\n        if(props.setEditData){\r\n            props.setEditData({});\r\n        }\r\n    }\r\n\r\n    const changeToEditData = (data) => {\r\n        setValue(data);\r\n        setEntryType(1);\r\n    }\r\n\r\n    const validateValues = (values) => {\r\n        for (let key in values){\r\n            if(values[key] === undefined || !values[key]){\r\n                delete values[key]\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    const submitEntry = (value) => {\r\n        value.invoice = value.invoice.toUpperCase();\r\n        value = validateValues(value);\r\n        setLoading(true);\r\n        databaseFunctions.setTrackingData(value, currentUser, function(error){\r\n            if(error){\r\n                console.log(\"Error occured\");\r\n            } else {\r\n                setValue({});\r\n                setEntryType(0);\r\n                entryFormRef.current.reset();\r\n\r\n                if(props.setLoadFirebaseData){\r\n                    props.setLoadFirebaseData(!props.loadFirebaseData);\r\n                }\r\n            }\r\n\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(props.editData && Object.keys(props.editData).length !== 0){\r\n            changeToEditData(props.editData);\r\n        }\r\n    }, [props.editData])\r\n\r\n    return(\r\n        <>\r\n            {entryType !== 0 &&\r\n                <Box\r\n                    animation={{type:\"slideDown\", delay:0, size:\"large\", duration:500}}\r\n                    justify=\"center\"\r\n                    align=\"start\"\r\n                    pad={{bottom:\"medium\"}}\r\n                >\r\n                    <Button \r\n                        secondary \r\n                        style={{color: \"#1D337C\"}}\r\n                        icon={<AddCircle color=\"brand\"/>} \r\n                        label=\"Add New Entry\" \r\n                        reverse \r\n                        onClick={addNewEntry}\r\n                        focusIndicator={false}\r\n                    />\r\n                </Box>\r\n            }\r\n            {entryType === 0 ?\r\n                <Heading level=\"4\" style={{marginTop: 0}}>Add New Entry</Heading>\r\n                :\r\n                <Heading level=\"4\" style={{marginTop: 0}}>Edit Existing Entry : <span style={{color: \"#a1a1a1\"}}>{props.editData ? props.editData.invoice : ''}</span></Heading>\r\n            }\r\n            <Form\r\n                ref={entryFormRef}\r\n                value={value}\r\n                onChange={nextValue => setValue(nextValue)}\r\n                onReset={() => {if(entryType===1){setValue({invoice: value.invoice})}else{setValue({})}}}\r\n                onSubmit={({ value }) => { submitEntry(value) }}\r\n                defaultValue={{invoice:\"\", name:\"\"}}\r\n            >\r\n                <FormField name=\"invoice\" htmlFor=\"invoice-id\" label={<Text size=\"small\">Invoice Number</Text>} required>\r\n                    <TextInput id=\"invoice-id\" name=\"invoice\" disabled={entryType===1}/>\r\n                </FormField>\r\n                <FormField name=\"name\" htmlFor=\"text-input-id\" label={<Text size=\"small\">Name</Text>} required>\r\n                    <TextInput id=\"name-id\" name=\"name\" />\r\n                </FormField>\r\n                <FormField name=\"ordered_date\" htmlFor=\"ordered_date-id\" label={<Text size=\"small\">Ordered Date</Text>} required>\r\n                    <DateInput\r\n                        id=\"ordered_date-id\"\r\n                        name=\"ordered_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                    />\r\n                </FormField>\r\n                {value.ordered_date &&\r\n                 <FormField name=\"processing_date\" htmlFor=\"processing_date-id\" label={<Text size=\"small\">Processing Date</Text>}>\r\n                    <DateInput\r\n                        id=\"processing_date-id\"\r\n                        name=\"processing_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                        calendarProps= {{\r\n                            bounds : [value.ordered_date, new Date(new Date().setFullYear(new Date().getFullYear() + 1))]\r\n                        }}\r\n                    />\r\n                </FormField>\r\n                }\r\n                {value.processing_date &&\r\n                <FormField name=\"ontheway_date\" htmlFor=\"ontheway_date-id\" label={<Text size=\"small\">On the Way Date</Text>}>\r\n                    <DateInput\r\n                        id=\"ontheway_date-id\"\r\n                        name=\"ontheway_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                        calendarProps= {{\r\n                            bounds : [value.processing_date, new Date(new Date().setFullYear(new Date().getFullYear() + 1))]\r\n                        }}\r\n                    />\r\n                </FormField>\r\n                }\r\n                {value.ontheway_date &&\r\n                <FormField name=\"pickup_date\" htmlFor=\"pickup_date-id\" label={<Text size=\"small\">Pickup Date</Text>}>\r\n                    <DateInput\r\n                        id=\"pickup_date-id\"\r\n                        name=\"pickup_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                        calendarProps= {{\r\n                            bounds : [value.ontheway_date, new Date(new Date().setFullYear(new Date().getFullYear() + 1))]\r\n                        }}\r\n                    />\r\n                </FormField>\r\n                }\r\n                {value.pickup_date &&\r\n                <FormField name=\"delivered_date\" htmlFor=\"delivered_date-id\" label={<Text size=\"small\">Delivered Date</Text>}>\r\n                    <DateInput\r\n                        id=\"delivered_date-id\"\r\n                        name=\"delivered_date\"\r\n                        format=\"mm/dd/yyyy\"\r\n                        calendarProps= {{\r\n                            bounds : [value.pickup_date, new Date(new Date().setFullYear(new Date().getFullYear() + 1))]\r\n                        }}\r\n                    />\r\n                </FormField>\r\n                }\r\n                {!loading?\r\n                    <Box direction=\"row\" gap=\"medium\" margin={{\"vertical\":\"medium\"}}>\r\n                        <Button type=\"submit\" primary label=\"Submit\" className=\"button-style\"/>\r\n                        <Button type=\"reset\" label=\"Reset\" style={{color: \"#1D337C\"}} className=\"button-style\"/>\r\n                    </Box>  \r\n                    : \r\n                    <div style={{ display: 'flex', marginTop: \"20px\"}}>\r\n                        <Spinner/>\r\n                        <Text margin={{\"horizontal\": \"medium\"}}>Saving Data...</Text>\r\n                    </div>\r\n                }\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPanel;","const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n];\r\n\r\nconst days = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tue',\r\n    'Wed',\r\n    'Thu',\r\n    'Fri',\r\n    'Sat'\r\n];\r\n\r\nconst helper = {\r\n    formatDate : (date) => {\r\n        let newDate = new Date(date);\r\n        const year = newDate.getFullYear();\r\n        const dateIndex = newDate.getDate();\r\n        const month = months[newDate.getMonth()];\r\n        const day = days[newDate.getDay()];\r\n\r\n        const formattedDate = `${day}, ${dateIndex} ${month} ${year}`\r\n        return formattedDate;\r\n\r\n    }\r\n}\r\n\r\nexport default helper;","import React from 'react'\r\nimport { Box, Button, TextInput, Table, TableHeader, TableRow, TableCell, TableBody, Text, Form, FormField, Spinner, Pagination } from 'grommet';\r\nimport { Search, FormEdit } from 'grommet-icons';\r\n\r\n// custom exported functions\r\nimport databaseFunctions from \"../../databaseFunctions.js\";\r\nimport helper from \"../../helperFunctions.js\"\r\n\r\nconst DataTablePanel = (props) => {\r\n\r\n    // Steps for Pagination\r\n    const step = 10;\r\n\r\n    const [searchObject, setSearchObject] = React.useState({});\r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n    const [trackingData, setTrackingData] = React.useState([]);\r\n    const [paginationData, setPaginationData] = React.useState({page:1, startIndex:0, endIndex:step-1})\r\n    const [isLoadingData, setIsLoadingData] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoadingData(true);\r\n            const responseData = await databaseFunctions.getAllTrackingData();\r\n            if(responseData.error){\r\n                console.log(responseData.error);\r\n            } else {\r\n                setTrackingData(responseData.response);\r\n            }\r\n            setIsLoadingData(false);\r\n        }\r\n        \r\n        fetchData();\r\n\r\n    },[props.loadFirebaseData])\r\n\r\n    // Filter data as per the search term\r\n    const getFilteredData = (trackingData, searchTerm) => {\r\n        const result = trackingData.filter((data) => {\r\n            let filterData = false;\r\n            for( const [key, value] of Object.entries(data) ){\r\n                // filter for name and invoice\r\n                if(key === \"name\" || key === \"invoice\"){\r\n                    if(value.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                        filterData = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Get final state values\r\n                const finalState = getFinalState(data);\r\n                if(finalState.status.toLowerCase().includes(searchTerm.toLowerCase()) || finalState.date.includes(searchTerm)){\r\n                    filterData = true;\r\n                    break;\r\n                }\r\n\r\n                // Get date in string\r\n                if(helper.formatDate(finalState.date).toLowerCase().includes(searchTerm.toLowerCase())){\r\n                    filterData = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return filterData;\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    const getSearchedData = async(searchTerm) => {\r\n        setIsLoadingData(true);\r\n\r\n        // Filter done from front end\r\n        const responseData = await databaseFunctions.getAllTrackingData();\r\n            if(responseData.error){\r\n                console.log(responseData.error);\r\n            } else {\r\n                const filteredData = searchTerm !== undefined ? getFilteredData(responseData.response, searchTerm) : responseData.response;\r\n                setTrackingData(filteredData);\r\n            }\r\n        setSearchTerm(searchTerm);\r\n        setIsLoadingData(false);\r\n    }\r\n\r\n    const editSelectedData = (data) => {\r\n        if(props.setEditData){\r\n            props.setEditData(data);\r\n        }\r\n    }\r\n\r\n    const getFinalState = (data) => {\r\n        \r\n        let keys = [\"delivered_date\",\"pickup_date\",\"ontheway_date\",\"processing_date\",\"ordered_date\"];\r\n        let keyNames = [\"Delivered\", \"Ready for Pickup\", \"On the Way\", \"Processing\", \"Ordered\"]\r\n        let colors = [\"#00873D\", \"#00C781\", \"#FFCA58\", \"#fa9200\", \"#FF4040\"]\r\n        let finalStatus = {};\r\n\r\n        for(let i=0; i < keys.length; i++){\r\n            if(keys[i] in data && data[keys[i]]){\r\n                finalStatus = {\r\n                    status : keyNames[i],\r\n                    date : data[keys[i]].toLocaleString(),\r\n                    color : colors[i]\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!finalStatus){\r\n            finalStatus = {\r\n                status : \"Invalid Status\",\r\n                date : \"-\"\r\n            }\r\n        }\r\n\r\n        return finalStatus;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Box fill>\r\n                <Box\r\n                    direction=\"row\"\r\n                    justify=\"between\"\r\n                >\r\n                    <Form\r\n                        value={searchObject}\r\n                        onChange={nextValue => setSearchObject(nextValue)}\r\n                        onSubmit={({ value }) => { getSearchedData(value.searchTerm) }}\r\n                    >\r\n                        <Box direction=\"row\">\r\n                            <FormField>\r\n                                <TextInput\r\n                                    placeholder=\"Search by any\"\r\n                                    name=\"searchTerm\"\r\n                                    icon={<Search/>}\r\n                                />\r\n                            </FormField>\r\n                            <Button primary type=\"submit\" margin={{\"horizontal\": \"small\", vertical:\"xsmall\"}} label=\"Search\" className=\"button-style\"/>\r\n                        </Box>\r\n\r\n                    </Form>\r\n\r\n                    {isLoadingData && <Spinner size=\"medium\" align=\"end\"/>}\r\n\r\n                </Box>\r\n                {searchTerm &&\r\n                    <Box>\r\n                        <Text>Search results for \"{searchTerm}\"</Text>\r\n                    </Box>\r\n                }\r\n                <Box margin={{\"vertical\": \"large\"}}>\r\n                <Table>\r\n                    <TableHeader>\r\n                        <TableRow style={{background: '#f5f5f5'}}>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"medium\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                <strong>Invoice Number</strong>\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"large\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                Name\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"medium\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                Current Status\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"xlarge\" pad={{vertical:\"small\", horizontal: \"small\"}}>\r\n                                Status Date\r\n                            </TableCell>\r\n                            <TableCell scope=\"col\" border=\"bottom\" size=\"small\" pad={{vertical:\"small\", horizontal: \"small\"}} align=\"center\">\r\n                                Action\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {trackingData.length ? trackingData.map((tracked, index) => {\r\n\r\n                            if(index>= paginationData.startIndex && index <= paginationData.endIndex){\r\n                                return(\r\n                                    <TableRow key={tracked.invoice}>\r\n                                        <TableCell \r\n                                            scope=\"row\" \r\n                                            size=\"medium\"  \r\n                                            border=\"bottom\" \r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            <strong>{tracked.invoice}</strong>\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"large\"  \r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            {tracked.name}\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"medium\" \r\n                                            style={{textTransform: \"capitalize\"}}\r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            <div style={{ display: 'flex'}}>\r\n                                                <div \r\n                                                    style={{background: getFinalState(tracked).color, height: '20px', width: '20px', borderRadius: '50%', margin: '-2px 10px 0px 0px'}}>\r\n                                                </div>\r\n                                                {getFinalState(tracked).status}\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"xlarge\" \r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            {helper.formatDate(getFinalState(tracked).date)}\r\n                                        </TableCell>\r\n                                        <TableCell \r\n                                            size=\"small\" \r\n                                            border=\"bottom\"\r\n                                            pad={{vertical:\"medium\", horizontal: \"small\"}}\r\n                                        >\r\n                                            <Box plain>\r\n                                                <Button \r\n                                                    plain \r\n                                                    hoverIndicator \r\n                                                    icon={<FormEdit/>} \r\n                                                    label=\"Edit\"\r\n                                                    onClick={() => editSelectedData(tracked)}/>\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            } else return null\r\n                        })\r\n                            : <TableRow>\r\n                                <TableCell colSpan=\"5\" align=\"center\" pad={{vertical:\"medium\", horizontal: \"small\"}}><Text>😟 No Entries Found</Text></TableCell>\r\n                            </TableRow>\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n                <Box fill=\"horizontal\" pad={{top: \"medium\"}}>\r\n                    <Pagination \r\n                        alignSelf=\"end\" \r\n                        onChange= {({ page, startIndex, endIndex }) => { setPaginationData({page:page, startIndex:startIndex, endIndex:endIndex - 1}) }}\r\n                        step= {step}\r\n                        numberItems={trackingData.length} />\r\n                </Box>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataTablePanel;\r\n","import React from 'react';\r\nimport { Box, Grid, ResponsiveContext } from 'grommet';\r\n\r\n// Import custom components\r\nimport AddPanel from './panels/addPanel'\r\nimport DataTablePanel from \"./panels/dataTablePanel\"\r\n\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const [editData, setEditData] = React.useState({});\r\n    const [loadFirebaseData, setLoadFirebaseData] = React.useState(true)\r\n\r\n    const breakpoints = {\r\n      vertical : {\r\n        rows: ['auto', 'auto'],\r\n        columns: ['auto'],\r\n        areas: {\r\n          add_panel : { start: [0,0], end: [0,1]},\r\n          data_panel : {start: [0,1], end: [0,1]}\r\n        }\r\n      },\r\n      horizontal : {\r\n        rows: ['auto'],\r\n        columns: ['medium', 'auto'],\r\n        areas: {\r\n          add_panel : { start: [0,0], end: [0,0]},\r\n          data_panel : {start: [1,0], end: [1,0]}\r\n        }\r\n      }\r\n    }\r\n\r\n    return(\r\n      <ResponsiveContext.Consumer>\r\n        { size => {\r\n            let direction = ['xxsmall', 'xsmall', 'small'].includes(size)? 'vertical' : 'horizontal';\r\n            return (\r\n            <Grid\r\n            rows={breakpoints[direction].rows}\r\n            columns={breakpoints[direction].columns}\r\n            gap=\"xsmall\"\r\n            areas={[\r\n              { name: 'add-panel', start: breakpoints[direction].areas.add_panel.start, end: breakpoints[direction].areas.add_panel.end },\r\n              { name: 'data-panel', start: breakpoints[direction].areas.data_panel.start, end: breakpoints[direction].areas.data_panel.end },\r\n            ]}\r\n          >\r\n            <Box size={direction} animation={{type:\"slideUp\", delay:0, size:\"large\", duration:500}} pad={{vertical: \"large\", horizontal: \"medium\"}} gridArea=\"add-panel\" background=\"white\">\r\n              <AddPanel editData={editData} setEditData={setEditData} loadFirebaseData={loadFirebaseData} setLoadFirebaseData={setLoadFirebaseData}/>\r\n            </Box>\r\n            <Box size={direction} animation={{type:\"slideUp\", delay:0, size:\"large\", duration:500}} pad={{top:\"large\", bottom:\"medium\", horizontal: \"medium\"}} gridArea=\"data-panel\" background=\"white\">\r\n              <DataTablePanel setEditData={setEditData} loadFirebaseData={loadFirebaseData}/>\r\n            </Box>\r\n          </Grid>\r\n          )\r\n        }}\r\n      </ResponsiveContext.Consumer>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute;","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport { AuthContext } from \"../Auth.js\";\r\nimport { Box, Card, CardBody, Heading, Text, Form, FormField, TextInput, Button  } from \"grommet\";\r\nimport databaseFunctions from \"../databaseFunctions\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n  const [alertError, setAlertError] = useState({error: false, message: \"\"});\r\n  const [credentials, setCredentials] = React.useState({});\r\n\r\n  const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n\r\n\r\n  const handleLogin = useCallback(\r\n    async (credentials) => {\r\n      // event.preventDefault();\r\n      // const { email, password } = event.target.elements;\r\n      const email = credentials.email;\r\n      const password = credentials.password;\r\n\r\n      try {\r\n        databaseFunctions.loginUser({username: email, password:password}, (error, response) => {\r\n          if(!error && response.jwt){\r\n            localStorage.setItem(\"accessToken\", response.jwt);\r\n            setCurrentUser(response.jwt)\r\n            history.push(\"/\");\r\n          } else {\r\n            console.log(error);\r\n            setAlertError({\r\n              error: true,\r\n              message: error\r\n            });\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.log(error);\r\n        setAlertError({\r\n          error: true,\r\n          message: error\r\n        })\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Box background=\"white\" fill align=\"center\" justify=\"center\" pad=\"xlarge\">\r\n      <Heading level=\"2\">Login</Heading>\r\n      {alertError.error &&\r\n      <Box direction=\"row\" align=\"center\" justify=\"center\" fill=\"horizontal\" pad=\"medium\">\r\n        <Card  height=\"xsmall\" width=\"large\" background=\"#f8d7da\" elevation=\"xsmall\">\r\n            <CardBody pad=\"medium\" align=\"center\" justify=\"center\"><Text color=\"#842029\">{alertError.message.toString()}</Text></CardBody>\r\n        </Card>\r\n      </Box>\r\n      }\r\n      <Box width=\"medium\">\r\n        <Form \r\n          value={credentials}\r\n          onSubmit={({ value }) => { handleLogin(value) }}\r\n          onChange={nextValue => setCredentials(nextValue)}\r\n          defaultValue={{email: \"\", password: \"\"}}\r\n          >\r\n          <FormField name=\"email\" htmlFor=\"email-id\" label=\"Email\" required>\r\n            <TextInput id=\"email-id\" name=\"email\" type=\"email\"/>\r\n          </FormField>\r\n          <FormField name=\"password\" htmlFor=\"password-id\" label=\"Password\" required>\r\n            <TextInput id=\"password-id\" name=\"password\" type=\"password\"/>\r\n          </FormField>\r\n          <Box fill=\"horizontal\"  margin={{top: \"medium\"}} height=\"medium\">\r\n            <Button type=\"submit\" size=\"large\" primary label=\"Submit\" className=\"button-style\"/>\r\n          </Box>\r\n        </Form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);","import React from 'react';\nimport { Box, Grommet } from 'grommet';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport \"./App.css\"\n\n\n// import custom components\nimport Header from './components/header';\n// import FooterUI from './components/footer';\nimport Dashboard from './components/dashboard';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './components/Login'\nimport {AuthProvider} from './Auth';\n\nfunction App() {\n\n  const theme = {\n    global: {\n      colors: {\n        'brand': '#1D337C',\n        'accent-1': '#06164a',\n        'focus': '#06164a'\n      },\n      font: {\n        family: 'Poppins',\n        size: '14px',\n        height: '16px',\n      },\n    },\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <AuthProvider>\n        <Box fill background=\"light-2\">\n          <Header/>\n          <Router>\n            <PrivateRoute exact path=\"/\" component={Dashboard}/>\n            <Route exact path=\"/login\" component={Login} />\n          </Router>\n        </Box>\n        {/* <FooterUI /> */}\n      </AuthProvider>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}